basePath: /
definitions:
  controllers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  controllers.accessTokenResponse:
    properties:
      access_token:
        type: string
    type: object
  controllers.defaultResponse:
    properties:
      message:
        type: string
    type: object
  models.SignInInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.SwagUser:
    properties:
      full_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      is_blocked:
        type: boolean
      is_deleted:
        type: boolean
      password:
        type: string
      phone_number:
        type: string
      role_id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8181
info:
  contact: {}
  description: API Server for Computer Club Application
  title: Computer Club API
  version: "1.0"
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: sign in to account
      operationId: sign-in-to-account
      parameters:
      - description: sign-in info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.accessTokenResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SwagUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.defaultResponse'
        "400":
          description: Bad Request
          schema:
            type: "404"
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: SignUp
      tags:
      - auth
  /user:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users or a single user by username
      parameters:
      - description: Username to filter the user
        in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Single user details
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: Access Denied
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
